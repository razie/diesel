/*Generated by Xtext*/
grammar InternalNvp1;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package razdslnvp1.web.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package razdslnvp1.web.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import razie.diesel.services.Nvp1GrammarAccess;

}

@parser::members {
 
 	private Nvp1GrammarAccess grammarAccess;
 	
    public void setGrammarAccess(Nvp1GrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleDomainModel
entryRuleDomainModel 
:
{ before(grammarAccess.getDomainModelRule()); }
	 ruleDomainModel
{ after(grammarAccess.getDomainModelRule()); } 
	 EOF 
;

// Rule DomainModel
ruleDomainModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainModelAccess().getElementsAssignment()); }
(rule__DomainModel__ElementsAssignment)*
{ after(grammarAccess.getDomainModelAccess().getElementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractElement
entryRuleAbstractElement 
:
{ before(grammarAccess.getAbstractElementRule()); }
	 ruleAbstractElement
{ after(grammarAccess.getAbstractElementRule()); } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractElementAccess().getAlternatives()); }
(rule__AbstractElement__Alternatives)
{ after(grammarAccess.getAbstractElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReceive
entryRuleReceive 
:
{ before(grammarAccess.getReceiveRule()); }
	 ruleReceive
{ after(grammarAccess.getReceiveRule()); } 
	 EOF 
;

// Rule Receive
ruleReceive
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReceiveAccess().getGroup()); }
(rule__Receive__Group__0)
{ after(grammarAccess.getReceiveAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMsg
entryRuleMsg 
:
{ before(grammarAccess.getMsgRule()); }
	 ruleMsg
{ after(grammarAccess.getMsgRule()); } 
	 EOF 
;

// Rule Msg
ruleMsg
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMsgAccess().getGroup()); }
(rule__Msg__Group__0)
{ after(grammarAccess.getMsgAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMsgName
entryRuleMsgName 
:
{ before(grammarAccess.getMsgNameRule()); }
	 ruleMsgName
{ after(grammarAccess.getMsgNameRule()); } 
	 EOF 
;

// Rule MsgName
ruleMsgName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMsgNameAccess().getQualifiedNameParserRuleCall()); }
	ruleQualifiedName
{ after(grammarAccess.getMsgNameAccess().getQualifiedNameParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhen
entryRuleWhen 
:
{ before(grammarAccess.getWhenRule()); }
	 ruleWhen
{ after(grammarAccess.getWhenRule()); } 
	 EOF 
;

// Rule When
ruleWhen
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhenAccess().getGroup()); }
(rule__When__Group__0)
{ after(grammarAccess.getWhenAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMatch
entryRuleMatch 
:
{ before(grammarAccess.getMatchRule()); }
	 ruleMatch
{ after(grammarAccess.getMatchRule()); } 
	 EOF 
;

// Rule Match
ruleMatch
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMatchAccess().getGroup()); }
(rule__Match__Group__0)
{ after(grammarAccess.getMatchAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMock
entryRuleMock 
:
{ before(grammarAccess.getMockRule()); }
	 ruleMock
{ after(grammarAccess.getMockRule()); } 
	 EOF 
;

// Rule Mock
ruleMock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMockAccess().getGroup()); }
(rule__Mock__Group__0)
{ after(grammarAccess.getMockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFlow
entryRuleFlow 
:
{ before(grammarAccess.getFlowRule()); }
	 ruleFlow
{ after(grammarAccess.getFlowRule()); } 
	 EOF 
;

// Rule Flow
ruleFlow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFlowAccess().getGroup()); }
(rule__Flow__Group__0)
{ after(grammarAccess.getFlowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpect
entryRuleExpect 
:
{ before(grammarAccess.getExpectRule()); }
	 ruleExpect
{ after(grammarAccess.getExpectRule()); } 
	 EOF 
;

// Rule Expect
ruleExpect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpectAccess().getAlternatives()); }
(rule__Expect__Alternatives)
{ after(grammarAccess.getExpectAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCondition
entryRuleCondition 
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionAccess().getGroup()); }
(rule__Condition__Group__0)
{ after(grammarAccess.getConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpectM
entryRuleExpectM 
:
{ before(grammarAccess.getExpectMRule()); }
	 ruleExpectM
{ after(grammarAccess.getExpectMRule()); } 
	 EOF 
;

// Rule ExpectM
ruleExpectM
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpectMAccess().getGroup()); }
(rule__ExpectM__Group__0)
{ after(grammarAccess.getExpectMAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpectV
entryRuleExpectV 
:
{ before(grammarAccess.getExpectVRule()); }
	 ruleExpectV
{ after(grammarAccess.getExpectVRule()); } 
	 EOF 
;

// Rule ExpectV
ruleExpectV
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpectVAccess().getGroup()); }
(rule__ExpectV__Group__0)
{ after(grammarAccess.getExpectVAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVal
entryRuleVal 
:
{ before(grammarAccess.getValRule()); }
	 ruleVal
{ after(grammarAccess.getValRule()); } 
	 EOF 
;

// Rule Val
ruleVal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValAccess().getGroup()); }
(rule__Val__Group__0)
{ after(grammarAccess.getValAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleOption
entryRuleOption 
:
{ before(grammarAccess.getOptionRule()); }
	 ruleOption
{ after(grammarAccess.getOptionRule()); } 
	 EOF 
;

// Rule Option
ruleOption
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionAccess().getGroup()); }
(rule__Option__Group__0)
{ after(grammarAccess.getOptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttrChecks
entryRuleAttrChecks 
:
{ before(grammarAccess.getAttrChecksRule()); }
	 ruleAttrChecks
{ after(grammarAccess.getAttrChecksRule()); } 
	 EOF 
;

// Rule AttrChecks
ruleAttrChecks
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttrChecksAccess().getGroup()); }
(rule__AttrChecks__Group__0)
{ after(grammarAccess.getAttrChecksAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttrCheck
entryRuleAttrCheck 
:
{ before(grammarAccess.getAttrCheckRule()); }
	 ruleAttrCheck
{ after(grammarAccess.getAttrCheckRule()); } 
	 EOF 
;

// Rule AttrCheck
ruleAttrCheck
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttrCheckAccess().getGroup()); }
(rule__AttrCheck__Group__0)
{ after(grammarAccess.getAttrCheckAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCheckExpr
entryRuleCheckExpr 
:
{ before(grammarAccess.getCheckExprRule()); }
	 ruleCheckExpr
{ after(grammarAccess.getCheckExprRule()); } 
	 EOF 
;

// Rule CheckExpr
ruleCheckExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCheckExprAccess().getAlternatives()); }
(rule__CheckExpr__Alternatives)
{ after(grammarAccess.getCheckExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttrSpecs
entryRuleAttrSpecs 
:
{ before(grammarAccess.getAttrSpecsRule()); }
	 ruleAttrSpecs
{ after(grammarAccess.getAttrSpecsRule()); } 
	 EOF 
;

// Rule AttrSpecs
ruleAttrSpecs
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttrSpecsAccess().getGroup()); }
(rule__AttrSpecs__Group__0)
{ after(grammarAccess.getAttrSpecsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttrSpec
entryRuleAttrSpec 
:
{ before(grammarAccess.getAttrSpecRule()); }
	 ruleAttrSpec
{ after(grammarAccess.getAttrSpecRule()); } 
	 EOF 
;

// Rule AttrSpec
ruleAttrSpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttrSpecAccess().getGroup()); }
(rule__AttrSpec__Group__0)
{ after(grammarAccess.getAttrSpecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttr
entryRuleAttr 
:
{ before(grammarAccess.getAttrRule()); }
	 ruleAttr
{ after(grammarAccess.getAttrRule()); } 
	 EOF 
;

// Rule Attr
ruleAttr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttrAccess().getGroup()); }
(rule__Attr__Group__0)
{ after(grammarAccess.getAttrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEXPR
entryRuleEXPR 
:
{ before(grammarAccess.getEXPRRule()); }
	 ruleEXPR
{ after(grammarAccess.getEXPRRule()); } 
	 EOF 
;

// Rule EXPR
ruleEXPR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEXPRAccess().getAlternatives()); }
(rule__EXPR__Alternatives)
{ after(grammarAccess.getEXPRAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttrs
entryRuleAttrs 
:
{ before(grammarAccess.getAttrsRule()); }
	 ruleAttrs
{ after(grammarAccess.getAttrsRule()); } 
	 EOF 
;

// Rule Attrs
ruleAttrs
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttrsAccess().getGroup()); }
(rule__Attrs__Group__0)
{ after(grammarAccess.getAttrsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTopic
entryRuleTopic 
:
{ before(grammarAccess.getTopicRule()); }
	 ruleTopic
{ after(grammarAccess.getTopicRule()); } 
	 EOF 
;

// Rule Topic
ruleTopic
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTopicAccess().getGroup()); }
(rule__Topic__Group__0)
{ after(grammarAccess.getTopicAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBraq
entryRuleBraq 
:
{ before(grammarAccess.getBraqRule()); }
	 ruleBraq
{ after(grammarAccess.getBraqRule()); } 
	 EOF 
;

// Rule Braq
ruleBraq
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBraqAccess().getRightCurlyBracketKeyword()); }

	'}' 

{ after(grammarAccess.getBraqAccess().getRightCurlyBracketKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFlowExprA
entryRuleFlowExprA 
:
{ before(grammarAccess.getFlowExprARule()); }
	 ruleFlowExprA
{ after(grammarAccess.getFlowExprARule()); } 
	 EOF 
;

// Rule FlowExprA
ruleFlowExprA
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFlowExprAAccess().getGroup()); }
(rule__FlowExprA__Group__0)
{ after(grammarAccess.getFlowExprAAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFlowExprP
entryRuleFlowExprP 
:
{ before(grammarAccess.getFlowExprPRule()); }
	 ruleFlowExprP
{ after(grammarAccess.getFlowExprPRule()); } 
	 EOF 
;

// Rule FlowExprP
ruleFlowExprP
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFlowExprPAccess().getGroup()); }
(rule__FlowExprP__Group__0)
{ after(grammarAccess.getFlowExprPAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFlowExprT
entryRuleFlowExprT 
:
{ before(grammarAccess.getFlowExprTRule()); }
	 ruleFlowExprT
{ after(grammarAccess.getFlowExprTRule()); } 
	 EOF 
;

// Rule FlowExprT
ruleFlowExprT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFlowExprTAccess().getAlternatives()); }
(rule__FlowExprT__Alternatives)
{ after(grammarAccess.getFlowExprTAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataType
entryRuleDataType 
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
(rule__DataType__Alternatives)
{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMsgStereo
entryRuleMsgStereo 
:
{ before(grammarAccess.getMsgStereoRule()); }
	 ruleMsgStereo
{ after(grammarAccess.getMsgStereoRule()); } 
	 EOF 
;

// Rule MsgStereo
ruleMsgStereo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMsgStereoAccess().getAlternatives()); }
(rule__MsgStereo__Alternatives)
{ after(grammarAccess.getMsgStereoAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AbstractElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractElementAccess().getExpectParserRuleCall_0()); }
	ruleExpect
{ after(grammarAccess.getAbstractElementAccess().getExpectParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getMsgParserRuleCall_1()); }
	ruleMsg
{ after(grammarAccess.getAbstractElementAccess().getMsgParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getMatchParserRuleCall_2()); }
	ruleMatch
{ after(grammarAccess.getAbstractElementAccess().getMatchParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getWhenParserRuleCall_3()); }
	ruleWhen
{ after(grammarAccess.getAbstractElementAccess().getWhenParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getReceiveParserRuleCall_4()); }
	ruleReceive
{ after(grammarAccess.getAbstractElementAccess().getReceiveParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getFlowParserRuleCall_5()); }
	ruleFlow
{ after(grammarAccess.getAbstractElementAccess().getFlowParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getOptionParserRuleCall_6()); }
	ruleOption
{ after(grammarAccess.getAbstractElementAccess().getOptionParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getValParserRuleCall_7()); }
	ruleVal
{ after(grammarAccess.getAbstractElementAccess().getValParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getMockParserRuleCall_8()); }
	ruleMock
{ after(grammarAccess.getAbstractElementAccess().getMockParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getTopicParserRuleCall_9()); }
	ruleTopic
{ after(grammarAccess.getAbstractElementAccess().getTopicParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getBraqParserRuleCall_10()); }
	ruleBraq
{ after(grammarAccess.getAbstractElementAccess().getBraqParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getTEXTTerminalRuleCall_11()); }
	RULE_TEXT
{ after(grammarAccess.getAbstractElementAccess().getTEXTTerminalRuleCall_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expect__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpectAccess().getExpectMParserRuleCall_0()); }
	ruleExpectM
{ after(grammarAccess.getExpectAccess().getExpectMParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpectAccess().getExpectVParserRuleCall_1()); }
	ruleExpectV
{ after(grammarAccess.getExpectAccess().getExpectVParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getGroup_0()); }
(rule__CheckExpr__Group_0__0)
{ after(grammarAccess.getCheckExprAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCheckExprAccess().getGroup_1()); }
(rule__CheckExpr__Group_1__0)
{ after(grammarAccess.getCheckExprAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getCheckExprAccess().getGroup_2()); }
(rule__CheckExpr__Group_2__0)
{ after(grammarAccess.getCheckExprAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getCheckExprAccess().getGroup_3()); }
(rule__CheckExpr__Group_3__0)
{ after(grammarAccess.getCheckExprAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getCheckExprAccess().getGroup_4()); }
(rule__CheckExpr__Group_4__0)
{ after(grammarAccess.getCheckExprAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getCheckExprAccess().getGroup_5()); }
(rule__CheckExpr__Group_5__0)
{ after(grammarAccess.getCheckExprAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getCheckExprAccess().getGroup_6()); }
(rule__CheckExpr__Group_6__0)
{ after(grammarAccess.getCheckExprAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getCheckExprAccess().getGroup_7()); }
(rule__CheckExpr__Group_7__0)
{ after(grammarAccess.getCheckExprAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__OpAlternatives_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getOpEqualsSignKeyword_0_0_0_0()); }

	'=' 

{ after(grammarAccess.getCheckExprAccess().getOpEqualsSignKeyword_0_0_0_0()); }
)

    |(
{ before(grammarAccess.getCheckExprAccess().getOpExclamationMarkEqualsSignKeyword_0_0_0_1()); }

	'!=' 

{ after(grammarAccess.getCheckExprAccess().getOpExclamationMarkEqualsSignKeyword_0_0_0_1()); }
)

    |(
{ before(grammarAccess.getCheckExprAccess().getOpLessThanSignKeyword_0_0_0_2()); }

	'<' 

{ after(grammarAccess.getCheckExprAccess().getOpLessThanSignKeyword_0_0_0_2()); }
)

    |(
{ before(grammarAccess.getCheckExprAccess().getOpLessThanSignEqualsSignKeyword_0_0_0_3()); }

	'<=' 

{ after(grammarAccess.getCheckExprAccess().getOpLessThanSignEqualsSignKeyword_0_0_0_3()); }
)

    |(
{ before(grammarAccess.getCheckExprAccess().getOpGreaterThanSignKeyword_0_0_0_4()); }

	'>' 

{ after(grammarAccess.getCheckExprAccess().getOpGreaterThanSignKeyword_0_0_0_4()); }
)

    |(
{ before(grammarAccess.getCheckExprAccess().getOpGreaterThanSignEqualsSignKeyword_0_0_0_5()); }

	'>=' 

{ after(grammarAccess.getCheckExprAccess().getOpGreaterThanSignEqualsSignKeyword_0_0_0_5()); }
)

    |(
{ before(grammarAccess.getCheckExprAccess().getOpTildeEqualsSignKeyword_0_0_0_6()); }

	'~=' 

{ after(grammarAccess.getCheckExprAccess().getOpTildeEqualsSignKeyword_0_0_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRAccess().getParmAssignment_0()); }
(rule__EXPR__ParmAssignment_0)
{ after(grammarAccess.getEXPRAccess().getParmAssignment_0()); }
)

    |(
{ before(grammarAccess.getEXPRAccess().getSvalueAssignment_1()); }
(rule__EXPR__SvalueAssignment_1)
{ after(grammarAccess.getEXPRAccess().getSvalueAssignment_1()); }
)

    |(
{ before(grammarAccess.getEXPRAccess().getIvalueAssignment_2()); }
(rule__EXPR__IvalueAssignment_2)
{ after(grammarAccess.getEXPRAccess().getIvalueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FlowExprT__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowExprTAccess().getMAssignment_0()); }
(rule__FlowExprT__MAssignment_0)
{ after(grammarAccess.getFlowExprTAccess().getMAssignment_0()); }
)

    |(
{ before(grammarAccess.getFlowExprTAccess().getGroup_1()); }
(rule__FlowExprT__Group_1__0)
{ after(grammarAccess.getFlowExprTAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getStringAssignment_0()); }
(rule__DataType__StringAssignment_0)
{ after(grammarAccess.getDataTypeAccess().getStringAssignment_0()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getIntAssignment_1()); }
(rule__DataType__IntAssignment_1)
{ after(grammarAccess.getDataTypeAccess().getIntAssignment_1()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getDateAssignment_2()); }
(rule__DataType__DateAssignment_2)
{ after(grammarAccess.getDataTypeAccess().getDateAssignment_2()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getNumberAssignment_3()); }
(rule__DataType__NumberAssignment_3)
{ after(grammarAccess.getDataTypeAccess().getNumberAssignment_3()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getArrayAssignment_4()); }
(rule__DataType__ArrayAssignment_4)
{ after(grammarAccess.getDataTypeAccess().getArrayAssignment_4()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getJsonAssignment_5()); }
(rule__DataType__JsonAssignment_5)
{ after(grammarAccess.getDataTypeAccess().getJsonAssignment_5()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getTtypeAssignment_6()); }
(rule__DataType__TtypeAssignment_6)
{ after(grammarAccess.getDataTypeAccess().getTtypeAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MsgStereo__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMsgStereoAccess().getGETAssignment_0()); }
(rule__MsgStereo__GETAssignment_0)
{ after(grammarAccess.getMsgStereoAccess().getGETAssignment_0()); }
)

    |(
{ before(grammarAccess.getMsgStereoAccess().getPOSTAssignment_1()); }
(rule__MsgStereo__POSTAssignment_1)
{ after(grammarAccess.getMsgStereoAccess().getPOSTAssignment_1()); }
)

    |(
{ before(grammarAccess.getMsgStereoAccess().getCamelAssignment_2()); }
(rule__MsgStereo__CamelAssignment_2)
{ after(grammarAccess.getMsgStereoAccess().getCamelAssignment_2()); }
)

    |(
{ before(grammarAccess.getMsgStereoAccess().getJSAssignment_3()); }
(rule__MsgStereo__JSAssignment_3)
{ after(grammarAccess.getMsgStereoAccess().getJSAssignment_3()); }
)

    |(
{ before(grammarAccess.getMsgStereoAccess().getJavaAssignment_4()); }
(rule__MsgStereo__JavaAssignment_4)
{ after(grammarAccess.getMsgStereoAccess().getJavaAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Receive__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Receive__Group__0__Impl
	rule__Receive__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Receive__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveAccess().getSendKeyword_0()); }

	'$send' 

{ after(grammarAccess.getReceiveAccess().getSendKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Receive__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Receive__Group__1__Impl
	rule__Receive__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Receive__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveAccess().getGroup_1()); }
(rule__Receive__Group_1__0)?
{ after(grammarAccess.getReceiveAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Receive__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Receive__Group__2__Impl
	rule__Receive__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Receive__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveAccess().getNameAssignment_2()); }
(rule__Receive__NameAssignment_2)
{ after(grammarAccess.getReceiveAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Receive__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Receive__Group__3__Impl
	rule__Receive__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Receive__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveAccess().getAttrsAssignment_3()); }
(rule__Receive__AttrsAssignment_3)?
{ after(grammarAccess.getReceiveAccess().getAttrsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Receive__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Receive__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Receive__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveAccess().getNEWLINETerminalRuleCall_4()); }
	RULE_NEWLINE
{ after(grammarAccess.getReceiveAccess().getNEWLINETerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Receive__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Receive__Group_1__0__Impl
	rule__Receive__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Receive__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveAccess().getLessThanSignKeyword_1_0()); }

	'<' 

{ after(grammarAccess.getReceiveAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Receive__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Receive__Group_1__1__Impl
	rule__Receive__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Receive__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveAccess().getStypeAssignment_1_1()); }
(rule__Receive__StypeAssignment_1_1)
{ after(grammarAccess.getReceiveAccess().getStypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Receive__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Receive__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Receive__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveAccess().getGreaterThanSignKeyword_1_2()); }

	'>' 

{ after(grammarAccess.getReceiveAccess().getGreaterThanSignKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Msg__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Msg__Group__0__Impl
	rule__Msg__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Msg__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMsgAccess().getMsgKeyword_0()); }

	'$msg' 

{ after(grammarAccess.getMsgAccess().getMsgKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Msg__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Msg__Group__1__Impl
	rule__Msg__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Msg__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMsgAccess().getGroup_1()); }
(rule__Msg__Group_1__0)?
{ after(grammarAccess.getMsgAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Msg__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Msg__Group__2__Impl
	rule__Msg__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Msg__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMsgAccess().getNameAssignment_2()); }
(rule__Msg__NameAssignment_2)
{ after(grammarAccess.getMsgAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Msg__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Msg__Group__3__Impl
	rule__Msg__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Msg__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMsgAccess().getAttrsAssignment_3()); }
(rule__Msg__AttrsAssignment_3)?
{ after(grammarAccess.getMsgAccess().getAttrsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Msg__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Msg__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Msg__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMsgAccess().getNEWLINETerminalRuleCall_4()); }
	RULE_NEWLINE
{ after(grammarAccess.getMsgAccess().getNEWLINETerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Msg__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Msg__Group_1__0__Impl
	rule__Msg__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Msg__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMsgAccess().getLessThanSignKeyword_1_0()); }

	'<' 

{ after(grammarAccess.getMsgAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Msg__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Msg__Group_1__1__Impl
	rule__Msg__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Msg__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMsgAccess().getStypeAssignment_1_1()); }
(rule__Msg__StypeAssignment_1_1)
{ after(grammarAccess.getMsgAccess().getStypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Msg__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Msg__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Msg__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMsgAccess().getGreaterThanSignKeyword_1_2()); }

	'>' 

{ after(grammarAccess.getMsgAccess().getGreaterThanSignKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__When__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When__Group__0__Impl
	rule__When__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getWhenKeyword_0()); }

	'$when' 

{ after(grammarAccess.getWhenAccess().getWhenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When__Group__1__Impl
	rule__When__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getAAssignment_1()); }
(rule__When__AAssignment_1)
{ after(grammarAccess.getWhenAccess().getAAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When__Group__2__Impl
	rule__When__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getAaAssignment_2()); }
(rule__When__AaAssignment_2)?
{ after(grammarAccess.getWhenAccess().getAaAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When__Group__3__Impl
	rule__When__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getCondAssignment_3()); }
(rule__When__CondAssignment_3)?
{ after(grammarAccess.getWhenAccess().getCondAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When__Group__4__Impl
	rule__When__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getARROWTerminalRuleCall_4()); }
	RULE_ARROW
{ after(grammarAccess.getWhenAccess().getARROWTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When__Group__5__Impl
	rule__When__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getZAssignment_5()); }
(rule__When__ZAssignment_5)
{ after(grammarAccess.getWhenAccess().getZAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When__Group__6__Impl
	rule__When__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getZaAssignment_6()); }
(rule__When__ZaAssignment_6)?
{ after(grammarAccess.getWhenAccess().getZaAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When__Group__7__Impl
	rule__When__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getNEWLINETerminalRuleCall_7()); }
	RULE_NEWLINE
{ after(grammarAccess.getWhenAccess().getNEWLINETerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getGroup_8()); }
(rule__When__Group_8__0)*
{ after(grammarAccess.getWhenAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__When__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When__Group_8__0__Impl
	rule__When__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getFARROWTerminalRuleCall_8_0()); }
	RULE_FARROW
{ after(grammarAccess.getWhenAccess().getFARROWTerminalRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When__Group_8__1__Impl
	rule__When__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getZAssignment_8_1()); }
(rule__When__ZAssignment_8_1)
{ after(grammarAccess.getWhenAccess().getZAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When__Group_8__2__Impl
	rule__When__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getZaAssignment_8_2()); }
(rule__When__ZaAssignment_8_2)?
{ after(grammarAccess.getWhenAccess().getZaAssignment_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getNEWLINETerminalRuleCall_8_3()); }
	RULE_NEWLINE
{ after(grammarAccess.getWhenAccess().getNEWLINETerminalRuleCall_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Match__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group__0__Impl
	rule__Match__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getMatchKeyword_0()); }

	'$match' 

{ after(grammarAccess.getMatchAccess().getMatchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group__1__Impl
	rule__Match__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getAAssignment_1()); }
(rule__Match__AAssignment_1)
{ after(grammarAccess.getMatchAccess().getAAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group__2__Impl
	rule__Match__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getAaAssignment_2()); }
(rule__Match__AaAssignment_2)?
{ after(grammarAccess.getMatchAccess().getAaAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group__3__Impl
	rule__Match__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getCondAssignment_3()); }
(rule__Match__CondAssignment_3)?
{ after(grammarAccess.getMatchAccess().getCondAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getNEWLINETerminalRuleCall_4()); }
	RULE_NEWLINE
{ after(grammarAccess.getMatchAccess().getNEWLINETerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Mock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mock__Group__0__Impl
	rule__Mock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMockAccess().getMockKeyword_0()); }

	'$mock' 

{ after(grammarAccess.getMockAccess().getMockKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mock__Group__1__Impl
	rule__Mock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMockAccess().getAAssignment_1()); }
(rule__Mock__AAssignment_1)
{ after(grammarAccess.getMockAccess().getAAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mock__Group__2__Impl
	rule__Mock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMockAccess().getAaAssignment_2()); }
(rule__Mock__AaAssignment_2)?
{ after(grammarAccess.getMockAccess().getAaAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mock__Group__3__Impl
	rule__Mock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMockAccess().getCondAssignment_3()); }
(rule__Mock__CondAssignment_3)?
{ after(grammarAccess.getMockAccess().getCondAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mock__Group__4__Impl
	rule__Mock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMockAccess().getARROWTerminalRuleCall_4()); }
	RULE_ARROW
{ after(grammarAccess.getMockAccess().getARROWTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mock__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mock__Group__5__Impl
	rule__Mock__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Mock__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMockAccess().getZaAssignment_5()); }
(rule__Mock__ZaAssignment_5)?
{ after(grammarAccess.getMockAccess().getZaAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mock__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mock__Group__6__Impl
	rule__Mock__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Mock__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMockAccess().getNEWLINETerminalRuleCall_6()); }
	RULE_NEWLINE
{ after(grammarAccess.getMockAccess().getNEWLINETerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mock__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mock__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mock__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMockAccess().getGroup_7()); }
(rule__Mock__Group_7__0)*
{ after(grammarAccess.getMockAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Mock__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mock__Group_7__0__Impl
	rule__Mock__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mock__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMockAccess().getFARROWTerminalRuleCall_7_0()); }
	RULE_FARROW
{ after(grammarAccess.getMockAccess().getFARROWTerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mock__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mock__Group_7__1__Impl
	rule__Mock__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mock__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMockAccess().getZaAssignment_7_1()); }
(rule__Mock__ZaAssignment_7_1)?
{ after(grammarAccess.getMockAccess().getZaAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mock__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mock__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mock__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMockAccess().getNEWLINETerminalRuleCall_7_2()); }
	RULE_NEWLINE
{ after(grammarAccess.getMockAccess().getNEWLINETerminalRuleCall_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Flow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group__0__Impl
	rule__Flow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getFlowKeyword_0()); }

	'$flow' 

{ after(grammarAccess.getFlowAccess().getFlowKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group__1__Impl
	rule__Flow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getAAssignment_1()); }
(rule__Flow__AAssignment_1)
{ after(grammarAccess.getFlowAccess().getAAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group__2__Impl
	rule__Flow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getAaAssignment_2()); }
(rule__Flow__AaAssignment_2)?
{ after(grammarAccess.getFlowAccess().getAaAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group__3__Impl
	rule__Flow__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getCondAssignment_3()); }
(rule__Flow__CondAssignment_3)?
{ after(grammarAccess.getFlowAccess().getCondAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group__4__Impl
	rule__Flow__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getARROWTerminalRuleCall_4()); }
	RULE_ARROW
{ after(grammarAccess.getFlowAccess().getARROWTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group__5__Impl
	rule__Flow__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getExprAssignment_5()); }
(rule__Flow__ExprAssignment_5)
{ after(grammarAccess.getFlowAccess().getExprAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getNEWLINETerminalRuleCall_6()); }
	RULE_NEWLINE
{ after(grammarAccess.getFlowAccess().getNEWLINETerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Condition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getIfKeyword_0()); }

	'$if' 

{ after(grammarAccess.getConditionAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getAttrsAssignment_1()); }
(rule__Condition__AttrsAssignment_1)
{ after(grammarAccess.getConditionAccess().getAttrsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpectM__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpectM__Group__0__Impl
	rule__ExpectM__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpectM__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpectMAccess().getExpectKeyword_0()); }

	'$expect' 

{ after(grammarAccess.getExpectMAccess().getExpectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpectM__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpectM__Group__1__Impl
	rule__ExpectM__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpectM__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpectMAccess().getGroup_1()); }
(rule__ExpectM__Group_1__0)
{ after(grammarAccess.getExpectMAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpectM__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpectM__Group__2__Impl
	rule__ExpectM__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpectM__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpectMAccess().getCondAssignment_2()); }
(rule__ExpectM__CondAssignment_2)?
{ after(grammarAccess.getExpectMAccess().getCondAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpectM__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpectM__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpectM__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpectMAccess().getNEWLINETerminalRuleCall_3()); }
	RULE_NEWLINE
{ after(grammarAccess.getExpectMAccess().getNEWLINETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ExpectM__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpectM__Group_1__0__Impl
	rule__ExpectM__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpectM__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpectMAccess().getNameAssignment_1_0()); }
(rule__ExpectM__NameAssignment_1_0)
{ after(grammarAccess.getExpectMAccess().getNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpectM__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpectM__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpectM__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpectMAccess().getAttrsAssignment_1_1()); }
(rule__ExpectM__AttrsAssignment_1_1)?
{ after(grammarAccess.getExpectMAccess().getAttrsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpectV__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpectV__Group__0__Impl
	rule__ExpectV__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpectV__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpectVAccess().getExpectKeyword_0()); }

	'$expect' 

{ after(grammarAccess.getExpectVAccess().getExpectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpectV__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpectV__Group__1__Impl
	rule__ExpectV__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpectV__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpectVAccess().getPAssignment_1()); }
(rule__ExpectV__PAssignment_1)
{ after(grammarAccess.getExpectVAccess().getPAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpectV__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpectV__Group__2__Impl
	rule__ExpectV__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpectV__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpectVAccess().getCondAssignment_2()); }
(rule__ExpectV__CondAssignment_2)?
{ after(grammarAccess.getExpectVAccess().getCondAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpectV__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpectV__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpectV__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpectVAccess().getNEWLINETerminalRuleCall_3()); }
	RULE_NEWLINE
{ after(grammarAccess.getExpectVAccess().getNEWLINETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Val__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Val__Group__0__Impl
	rule__Val__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Val__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValAccess().getValKeyword_0()); }

	'$val' 

{ after(grammarAccess.getValAccess().getValKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Val__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Val__Group__1__Impl
	rule__Val__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Val__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValAccess().getPAssignment_1()); }
(rule__Val__PAssignment_1)
{ after(grammarAccess.getValAccess().getPAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Val__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Val__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Val__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValAccess().getNEWLINETerminalRuleCall_2()); }
	RULE_NEWLINE
{ after(grammarAccess.getValAccess().getNEWLINETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Option__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Option__Group__0__Impl
	rule__Option__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getOptKeyword_0()); }

	'$opt' 

{ after(grammarAccess.getOptionAccess().getOptKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Option__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Option__Group__1__Impl
	rule__Option__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getAttrAssignment_1()); }
(rule__Option__AttrAssignment_1)
{ after(grammarAccess.getOptionAccess().getAttrAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Option__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Option__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getNEWLINETerminalRuleCall_2()); }
	RULE_NEWLINE
{ after(grammarAccess.getOptionAccess().getNEWLINETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttrChecks__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrChecks__Group__0__Impl
	rule__AttrChecks__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrChecks__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrChecksAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getAttrChecksAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrChecks__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrChecks__Group__1__Impl
	rule__AttrChecks__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrChecks__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrChecksAccess().getGroup_1()); }
(rule__AttrChecks__Group_1__0)?
{ after(grammarAccess.getAttrChecksAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrChecks__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrChecks__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrChecks__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrChecksAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getAttrChecksAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttrChecks__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrChecks__Group_1__0__Impl
	rule__AttrChecks__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrChecks__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrChecksAccess().getAttrsAssignment_1_0()); }
(rule__AttrChecks__AttrsAssignment_1_0)
{ after(grammarAccess.getAttrChecksAccess().getAttrsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrChecks__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrChecks__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrChecks__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrChecksAccess().getGroup_1_1()); }
(rule__AttrChecks__Group_1_1__0)*
{ after(grammarAccess.getAttrChecksAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttrChecks__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrChecks__Group_1_1__0__Impl
	rule__AttrChecks__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrChecks__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrChecksAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getAttrChecksAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrChecks__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrChecks__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrChecks__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrChecksAccess().getAttrsAssignment_1_1_1()); }
(rule__AttrChecks__AttrsAssignment_1_1_1)
{ after(grammarAccess.getAttrChecksAccess().getAttrsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttrCheck__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrCheck__Group__0__Impl
	rule__AttrCheck__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrCheck__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrCheckAccess().getNameAssignment_0()); }
(rule__AttrCheck__NameAssignment_0)
{ after(grammarAccess.getAttrCheckAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrCheck__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrCheck__Group__1__Impl
	rule__AttrCheck__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrCheck__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrCheckAccess().getGroup_1()); }
(rule__AttrCheck__Group_1__0)?
{ after(grammarAccess.getAttrCheckAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrCheck__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrCheck__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrCheck__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrCheckAccess().getCheckAssignment_2()); }
(rule__AttrCheck__CheckAssignment_2)?
{ after(grammarAccess.getAttrCheckAccess().getCheckAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttrCheck__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrCheck__Group_1__0__Impl
	rule__AttrCheck__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrCheck__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrCheckAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getAttrCheckAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrCheck__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrCheck__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrCheck__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrCheckAccess().getTtypeAssignment_1_1()); }
(rule__AttrCheck__TtypeAssignment_1_1)
{ after(grammarAccess.getAttrCheckAccess().getTtypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CheckExpr__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckExpr__Group_0__0__Impl
	rule__CheckExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getOpAssignment_0_0()); }
(rule__CheckExpr__OpAssignment_0_0)
{ after(grammarAccess.getCheckExprAccess().getOpAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CheckExpr__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckExpr__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getEexprAssignment_0_1()); }
(rule__CheckExpr__EexprAssignment_0_1)
{ after(grammarAccess.getCheckExprAccess().getEexprAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CheckExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckExpr__Group_1__0__Impl
	rule__CheckExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getIsKeyword_1_0()); }

	'is' 

{ after(grammarAccess.getCheckExprAccess().getIsKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CheckExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getNumberKeyword_1_1()); }

	'number' 

{ after(grammarAccess.getCheckExprAccess().getNumberKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CheckExpr__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckExpr__Group_2__0__Impl
	rule__CheckExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getIsKeyword_2_0()); }

	'is' 

{ after(grammarAccess.getCheckExprAccess().getIsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CheckExpr__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckExpr__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getDefinedKeyword_2_1()); }

	'defined' 

{ after(grammarAccess.getCheckExprAccess().getDefinedKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CheckExpr__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckExpr__Group_3__0__Impl
	rule__CheckExpr__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getIsKeyword_3_0()); }

	'is' 

{ after(grammarAccess.getCheckExprAccess().getIsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CheckExpr__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckExpr__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getEmptyKeyword_3_1()); }

	'empty' 

{ after(grammarAccess.getCheckExprAccess().getEmptyKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CheckExpr__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckExpr__Group_4__0__Impl
	rule__CheckExpr__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getNotKeyword_4_0()); }

	'not' 

{ after(grammarAccess.getCheckExprAccess().getNotKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CheckExpr__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckExpr__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getDefinedKeyword_4_1()); }

	'defined' 

{ after(grammarAccess.getCheckExprAccess().getDefinedKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CheckExpr__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckExpr__Group_5__0__Impl
	rule__CheckExpr__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getNotKeyword_5_0()); }

	'not' 

{ after(grammarAccess.getCheckExprAccess().getNotKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CheckExpr__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckExpr__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getEmptyKeyword_5_1()); }

	'empty' 

{ after(grammarAccess.getCheckExprAccess().getEmptyKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CheckExpr__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckExpr__Group_6__0__Impl
	rule__CheckExpr__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getIsKeyword_6_0()); }

	'is' 

{ after(grammarAccess.getCheckExprAccess().getIsKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CheckExpr__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckExpr__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getEexprAssignment_6_1()); }
(rule__CheckExpr__EexprAssignment_6_1)
{ after(grammarAccess.getCheckExprAccess().getEexprAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CheckExpr__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckExpr__Group_7__0__Impl
	rule__CheckExpr__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getContainsKeyword_7_0()); }

	'contains' 

{ after(grammarAccess.getCheckExprAccess().getContainsKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CheckExpr__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckExpr__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getEexprAssignment_7_1()); }
(rule__CheckExpr__EexprAssignment_7_1)
{ after(grammarAccess.getCheckExprAccess().getEexprAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttrSpecs__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrSpecs__Group__0__Impl
	rule__AttrSpecs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrSpecs__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSpecsAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getAttrSpecsAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrSpecs__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrSpecs__Group__1__Impl
	rule__AttrSpecs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrSpecs__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSpecsAccess().getGroup_1()); }
(rule__AttrSpecs__Group_1__0)?
{ after(grammarAccess.getAttrSpecsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrSpecs__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrSpecs__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrSpecs__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSpecsAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getAttrSpecsAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttrSpecs__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrSpecs__Group_1__0__Impl
	rule__AttrSpecs__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrSpecs__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSpecsAccess().getAttrsAssignment_1_0()); }
(rule__AttrSpecs__AttrsAssignment_1_0)
{ after(grammarAccess.getAttrSpecsAccess().getAttrsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrSpecs__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrSpecs__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrSpecs__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSpecsAccess().getGroup_1_1()); }
(rule__AttrSpecs__Group_1_1__0)*
{ after(grammarAccess.getAttrSpecsAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttrSpecs__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrSpecs__Group_1_1__0__Impl
	rule__AttrSpecs__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrSpecs__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSpecsAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getAttrSpecsAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrSpecs__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrSpecs__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrSpecs__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSpecsAccess().getAttrsAssignment_1_1_1()); }
(rule__AttrSpecs__AttrsAssignment_1_1_1)
{ after(grammarAccess.getAttrSpecsAccess().getAttrsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttrSpec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrSpec__Group__0__Impl
	rule__AttrSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrSpec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSpecAccess().getNameAssignment_0()); }
(rule__AttrSpec__NameAssignment_0)
{ after(grammarAccess.getAttrSpecAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrSpec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrSpec__Group__1__Impl
	rule__AttrSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrSpec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSpecAccess().getGroup_1()); }
(rule__AttrSpec__Group_1__0)?
{ after(grammarAccess.getAttrSpecAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrSpec__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrSpec__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrSpec__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSpecAccess().getGroup_2()); }
(rule__AttrSpec__Group_2__0)?
{ after(grammarAccess.getAttrSpecAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttrSpec__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrSpec__Group_1__0__Impl
	rule__AttrSpec__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrSpec__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSpecAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getAttrSpecAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrSpec__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrSpec__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrSpec__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSpecAccess().getTtypeAssignment_1_1()); }
(rule__AttrSpec__TtypeAssignment_1_1)
{ after(grammarAccess.getAttrSpecAccess().getTtypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttrSpec__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrSpec__Group_2__0__Impl
	rule__AttrSpec__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrSpec__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSpecAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getAttrSpecAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrSpec__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrSpec__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrSpec__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSpecAccess().getEexprAssignment_2_1()); }
(rule__AttrSpec__EexprAssignment_2_1)
{ after(grammarAccess.getAttrSpecAccess().getEexprAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group__0__Impl
	rule__Attr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getNameAssignment_0()); }
(rule__Attr__NameAssignment_0)
{ after(grammarAccess.getAttrAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group__1__Impl
	rule__Attr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getGroup_1()); }
(rule__Attr__Group_1__0)?
{ after(grammarAccess.getAttrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getGroup_2()); }
(rule__Attr__Group_2__0)?
{ after(grammarAccess.getAttrAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Attr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group_1__0__Impl
	rule__Attr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getAttrAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getTtypeAssignment_1_1()); }
(rule__Attr__TtypeAssignment_1_1)
{ after(grammarAccess.getAttrAccess().getTtypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attr__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group_2__0__Impl
	rule__Attr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getAttrAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getEexprAssignment_2_1()); }
(rule__Attr__EexprAssignment_2_1)
{ after(grammarAccess.getAttrAccess().getEexprAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attrs__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attrs__Group__0__Impl
	rule__Attrs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attrs__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrsAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getAttrsAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attrs__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attrs__Group__1__Impl
	rule__Attrs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attrs__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrsAccess().getGroup_1()); }
(rule__Attrs__Group_1__0)?
{ after(grammarAccess.getAttrsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attrs__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attrs__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attrs__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrsAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getAttrsAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Attrs__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attrs__Group_1__0__Impl
	rule__Attrs__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attrs__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrsAccess().getAttrsAssignment_1_0()); }
(rule__Attrs__AttrsAssignment_1_0)
{ after(grammarAccess.getAttrsAccess().getAttrsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attrs__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attrs__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attrs__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrsAccess().getGroup_1_1()); }
(rule__Attrs__Group_1_1__0)*
{ after(grammarAccess.getAttrsAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attrs__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attrs__Group_1_1__0__Impl
	rule__Attrs__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attrs__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrsAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getAttrsAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attrs__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attrs__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attrs__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrsAccess().getAttrsAssignment_1_1_1()); }
(rule__Attrs__AttrsAssignment_1_1_1)
{ after(grammarAccess.getAttrsAccess().getAttrsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Topic__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Topic__Group__0__Impl
	rule__Topic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Topic__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopicAccess().getLeftSquareBracketLeftSquareBracketKeyword_0()); }

	'[[' 

{ after(grammarAccess.getTopicAccess().getLeftSquareBracketLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Topic__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Topic__Group__1__Impl
	rule__Topic__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Topic__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopicAccess().getNameAssignment_1()); }
(rule__Topic__NameAssignment_1)
{ after(grammarAccess.getTopicAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Topic__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Topic__Group__2__Impl
	rule__Topic__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Topic__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopicAccess().getGroup_2()); }
(rule__Topic__Group_2__0)?
{ after(grammarAccess.getTopicAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Topic__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Topic__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Topic__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopicAccess().getRightSquareBracketRightSquareBracketKeyword_3()); }

	']]' 

{ after(grammarAccess.getTopicAccess().getRightSquareBracketRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Topic__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Topic__Group_2__0__Impl
	rule__Topic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Topic__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopicAccess().getColonKeyword_2_0()); }

	':' 

{ after(grammarAccess.getTopicAccess().getColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Topic__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Topic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Topic__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopicAccess().getTAssignment_2_1()); }
(rule__Topic__TAssignment_2_1)
{ after(grammarAccess.getTopicAccess().getTAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FlowExprA__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowExprA__Group__0__Impl
	rule__FlowExprA__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowExprA__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowExprAAccess().getAAssignment_0()); }
(rule__FlowExprA__AAssignment_0)
{ after(grammarAccess.getFlowExprAAccess().getAAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlowExprA__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowExprA__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowExprA__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowExprAAccess().getGroup_1()); }
(rule__FlowExprA__Group_1__0)*
{ after(grammarAccess.getFlowExprAAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FlowExprA__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowExprA__Group_1__0__Impl
	rule__FlowExprA__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowExprA__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowExprAAccess().getPlusSignKeyword_1_0()); }

	'+' 

{ after(grammarAccess.getFlowExprAAccess().getPlusSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlowExprA__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowExprA__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowExprA__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowExprAAccess().getBAssignment_1_1()); }
(rule__FlowExprA__BAssignment_1_1)
{ after(grammarAccess.getFlowExprAAccess().getBAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FlowExprP__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowExprP__Group__0__Impl
	rule__FlowExprP__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowExprP__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowExprPAccess().getAAssignment_0()); }
(rule__FlowExprP__AAssignment_0)
{ after(grammarAccess.getFlowExprPAccess().getAAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlowExprP__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowExprP__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowExprP__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowExprPAccess().getGroup_1()); }
(rule__FlowExprP__Group_1__0)*
{ after(grammarAccess.getFlowExprPAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FlowExprP__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowExprP__Group_1__0__Impl
	rule__FlowExprP__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowExprP__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowExprPAccess().getVerticalLineKeyword_1_0()); }

	'|' 

{ after(grammarAccess.getFlowExprPAccess().getVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlowExprP__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowExprP__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowExprP__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowExprPAccess().getBAssignment_1_1()); }
(rule__FlowExprP__BAssignment_1_1)
{ after(grammarAccess.getFlowExprPAccess().getBAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FlowExprT__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowExprT__Group_1__0__Impl
	rule__FlowExprT__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowExprT__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowExprTAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getFlowExprTAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlowExprT__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowExprT__Group_1__1__Impl
	rule__FlowExprT__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowExprT__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowExprTAccess().getFlowExprAParserRuleCall_1_1()); }
	ruleFlowExprA
{ after(grammarAccess.getFlowExprTAccess().getFlowExprAParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlowExprT__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowExprT__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowExprT__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowExprTAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getFlowExprTAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__DomainModel__ElementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainModelAccess().getElementsAbstractElementParserRuleCall_0()); }
	ruleAbstractElement{ after(grammarAccess.getDomainModelAccess().getElementsAbstractElementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Receive__StypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveAccess().getStypeMsgStereoParserRuleCall_1_1_0()); }
	ruleMsgStereo{ after(grammarAccess.getReceiveAccess().getStypeMsgStereoParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Receive__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveAccess().getNameMsgNameParserRuleCall_2_0()); }
	ruleMsgName{ after(grammarAccess.getReceiveAccess().getNameMsgNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Receive__AttrsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveAccess().getAttrsAttrSpecsParserRuleCall_3_0()); }
	ruleAttrSpecs{ after(grammarAccess.getReceiveAccess().getAttrsAttrSpecsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Msg__StypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMsgAccess().getStypeMsgStereoParserRuleCall_1_1_0()); }
	ruleMsgStereo{ after(grammarAccess.getMsgAccess().getStypeMsgStereoParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Msg__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMsgAccess().getNameMsgNameParserRuleCall_2_0()); }
	ruleMsgName{ after(grammarAccess.getMsgAccess().getNameMsgNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Msg__AttrsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMsgAccess().getAttrsAttrSpecsParserRuleCall_3_0()); }
	ruleAttrSpecs{ after(grammarAccess.getMsgAccess().getAttrsAttrSpecsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__When__AAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getAIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getWhenAccess().getAIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__When__AaAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getAaAttrsParserRuleCall_2_0()); }
	ruleAttrs{ after(grammarAccess.getWhenAccess().getAaAttrsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__When__CondAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getCondConditionParserRuleCall_3_0()); }
	ruleCondition{ after(grammarAccess.getWhenAccess().getCondConditionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__When__ZAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getZIDTerminalRuleCall_5_0()); }
	RULE_ID{ after(grammarAccess.getWhenAccess().getZIDTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__When__ZaAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getZaAttrSpecsParserRuleCall_6_0()); }
	ruleAttrSpecs{ after(grammarAccess.getWhenAccess().getZaAttrSpecsParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__When__ZAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getZIDTerminalRuleCall_8_1_0()); }
	RULE_ID{ after(grammarAccess.getWhenAccess().getZIDTerminalRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__When__ZaAssignment_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenAccess().getZaAttrSpecsParserRuleCall_8_2_0()); }
	ruleAttrSpecs{ after(grammarAccess.getWhenAccess().getZaAttrSpecsParserRuleCall_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Match__AAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getAIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getMatchAccess().getAIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Match__AaAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getAaAttrsParserRuleCall_2_0()); }
	ruleAttrs{ after(grammarAccess.getMatchAccess().getAaAttrsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Match__CondAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getCondConditionParserRuleCall_3_0()); }
	ruleCondition{ after(grammarAccess.getMatchAccess().getCondConditionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mock__AAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMockAccess().getAIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getMockAccess().getAIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mock__AaAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMockAccess().getAaAttrsParserRuleCall_2_0()); }
	ruleAttrs{ after(grammarAccess.getMockAccess().getAaAttrsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mock__CondAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMockAccess().getCondConditionParserRuleCall_3_0()); }
	ruleCondition{ after(grammarAccess.getMockAccess().getCondConditionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mock__ZaAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMockAccess().getZaAttrSpecsParserRuleCall_5_0()); }
	ruleAttrSpecs{ after(grammarAccess.getMockAccess().getZaAttrSpecsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mock__ZaAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMockAccess().getZaAttrSpecsParserRuleCall_7_1_0()); }
	ruleAttrSpecs{ after(grammarAccess.getMockAccess().getZaAttrSpecsParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__AAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getAIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFlowAccess().getAIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__AaAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getAaAttrsParserRuleCall_2_0()); }
	ruleAttrs{ after(grammarAccess.getFlowAccess().getAaAttrsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__CondAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getCondConditionParserRuleCall_3_0()); }
	ruleCondition{ after(grammarAccess.getFlowAccess().getCondConditionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__ExprAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getExprFlowExprAParserRuleCall_5_0()); }
	ruleFlowExprA{ after(grammarAccess.getFlowAccess().getExprFlowExprAParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__AttrsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getAttrsAttrChecksParserRuleCall_1_0()); }
	ruleAttrChecks{ after(grammarAccess.getConditionAccess().getAttrsAttrChecksParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpectM__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpectMAccess().getNameQualifiedNameParserRuleCall_1_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getExpectMAccess().getNameQualifiedNameParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpectM__AttrsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpectMAccess().getAttrsAttrChecksParserRuleCall_1_1_0()); }
	ruleAttrChecks{ after(grammarAccess.getExpectMAccess().getAttrsAttrChecksParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpectM__CondAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpectMAccess().getCondConditionParserRuleCall_2_0()); }
	ruleCondition{ after(grammarAccess.getExpectMAccess().getCondConditionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpectV__PAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpectVAccess().getPAttrChecksParserRuleCall_1_0()); }
	ruleAttrChecks{ after(grammarAccess.getExpectVAccess().getPAttrChecksParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpectV__CondAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpectVAccess().getCondConditionParserRuleCall_2_0()); }
	ruleCondition{ after(grammarAccess.getExpectVAccess().getCondConditionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Val__PAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValAccess().getPAttrSpecParserRuleCall_1_0()); }
	ruleAttrSpec{ after(grammarAccess.getValAccess().getPAttrSpecParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Option__AttrAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getAttrAttrSpecParserRuleCall_1_0()); }
	ruleAttrSpec{ after(grammarAccess.getOptionAccess().getAttrAttrSpecParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttrChecks__AttrsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrChecksAccess().getAttrsAttrCheckParserRuleCall_1_0_0()); }
	ruleAttrCheck{ after(grammarAccess.getAttrChecksAccess().getAttrsAttrCheckParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttrChecks__AttrsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrChecksAccess().getAttrsAttrCheckParserRuleCall_1_1_1_0()); }
	ruleAttrCheck{ after(grammarAccess.getAttrChecksAccess().getAttrsAttrCheckParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttrCheck__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrCheckAccess().getNameQualifiedNameParserRuleCall_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getAttrCheckAccess().getNameQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttrCheck__TtypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrCheckAccess().getTtypeDataTypeParserRuleCall_1_1_0()); }
	ruleDataType{ after(grammarAccess.getAttrCheckAccess().getTtypeDataTypeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttrCheck__CheckAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrCheckAccess().getCheckCheckExprParserRuleCall_2_0()); }
	ruleCheckExpr{ after(grammarAccess.getAttrCheckAccess().getCheckCheckExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__OpAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getOpAlternatives_0_0_0()); }
(rule__CheckExpr__OpAlternatives_0_0_0)
{ after(grammarAccess.getCheckExprAccess().getOpAlternatives_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__EexprAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getEexprEXPRParserRuleCall_0_1_0()); }
	ruleEXPR{ after(grammarAccess.getCheckExprAccess().getEexprEXPRParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__EexprAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getEexprEXPRParserRuleCall_6_1_0()); }
	ruleEXPR{ after(grammarAccess.getCheckExprAccess().getEexprEXPRParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpr__EexprAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckExprAccess().getEexprEXPRParserRuleCall_7_1_0()); }
	ruleEXPR{ after(grammarAccess.getCheckExprAccess().getEexprEXPRParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttrSpecs__AttrsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSpecsAccess().getAttrsAttrSpecParserRuleCall_1_0_0()); }
	ruleAttrSpec{ after(grammarAccess.getAttrSpecsAccess().getAttrsAttrSpecParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttrSpecs__AttrsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSpecsAccess().getAttrsAttrSpecParserRuleCall_1_1_1_0()); }
	ruleAttrSpec{ after(grammarAccess.getAttrSpecsAccess().getAttrsAttrSpecParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttrSpec__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSpecAccess().getNameQualifiedNameParserRuleCall_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getAttrSpecAccess().getNameQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttrSpec__TtypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSpecAccess().getTtypeDataTypeParserRuleCall_1_1_0()); }
	ruleDataType{ after(grammarAccess.getAttrSpecAccess().getTtypeDataTypeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttrSpec__EexprAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSpecAccess().getEexprEXPRParserRuleCall_2_1_0()); }
	ruleEXPR{ after(grammarAccess.getAttrSpecAccess().getEexprEXPRParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAttrAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__TtypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getTtypeDataTypeParserRuleCall_1_1_0()); }
	ruleDataType{ after(grammarAccess.getAttrAccess().getTtypeDataTypeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__EexprAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getEexprEXPRParserRuleCall_2_1_0()); }
	ruleEXPR{ after(grammarAccess.getAttrAccess().getEexprEXPRParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPR__ParmAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRAccess().getParmQualifiedNameParserRuleCall_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getEXPRAccess().getParmQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPR__SvalueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRAccess().getSvalueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getEXPRAccess().getSvalueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EXPR__IvalueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPRAccess().getIvalueINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getEXPRAccess().getIvalueINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attrs__AttrsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrsAccess().getAttrsAttrParserRuleCall_1_0_0()); }
	ruleAttr{ after(grammarAccess.getAttrsAccess().getAttrsAttrParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attrs__AttrsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrsAccess().getAttrsAttrParserRuleCall_1_1_1_0()); }
	ruleAttr{ after(grammarAccess.getAttrsAccess().getAttrsAttrParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Topic__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopicAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getTopicAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Topic__TAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopicAccess().getTQualifiedNameParserRuleCall_2_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getTopicAccess().getTQualifiedNameParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FlowExprA__AAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowExprAAccess().getAFlowExprPParserRuleCall_0_0()); }
	ruleFlowExprP{ after(grammarAccess.getFlowExprAAccess().getAFlowExprPParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FlowExprA__BAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowExprAAccess().getBFlowExprPParserRuleCall_1_1_0()); }
	ruleFlowExprP{ after(grammarAccess.getFlowExprAAccess().getBFlowExprPParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FlowExprP__AAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowExprPAccess().getAFlowExprTParserRuleCall_0_0()); }
	ruleFlowExprT{ after(grammarAccess.getFlowExprPAccess().getAFlowExprTParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FlowExprP__BAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowExprPAccess().getBFlowExprTParserRuleCall_1_1_0()); }
	ruleFlowExprT{ after(grammarAccess.getFlowExprPAccess().getBFlowExprTParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FlowExprT__MAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowExprTAccess().getMIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getFlowExprTAccess().getMIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__StringAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getStringStringKeyword_0_0()); }
(
{ before(grammarAccess.getDataTypeAccess().getStringStringKeyword_0_0()); }

	'String' 

{ after(grammarAccess.getDataTypeAccess().getStringStringKeyword_0_0()); }
)

{ after(grammarAccess.getDataTypeAccess().getStringStringKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__IntAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getIntIntKeyword_1_0()); }
(
{ before(grammarAccess.getDataTypeAccess().getIntIntKeyword_1_0()); }

	'Int' 

{ after(grammarAccess.getDataTypeAccess().getIntIntKeyword_1_0()); }
)

{ after(grammarAccess.getDataTypeAccess().getIntIntKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__DateAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getDateDateKeyword_2_0()); }
(
{ before(grammarAccess.getDataTypeAccess().getDateDateKeyword_2_0()); }

	'Date' 

{ after(grammarAccess.getDataTypeAccess().getDateDateKeyword_2_0()); }
)

{ after(grammarAccess.getDataTypeAccess().getDateDateKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__NumberAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getNumberNumberKeyword_3_0()); }
(
{ before(grammarAccess.getDataTypeAccess().getNumberNumberKeyword_3_0()); }

	'Number' 

{ after(grammarAccess.getDataTypeAccess().getNumberNumberKeyword_3_0()); }
)

{ after(grammarAccess.getDataTypeAccess().getNumberNumberKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__ArrayAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getArrayArrayKeyword_4_0()); }
(
{ before(grammarAccess.getDataTypeAccess().getArrayArrayKeyword_4_0()); }

	'Array' 

{ after(grammarAccess.getDataTypeAccess().getArrayArrayKeyword_4_0()); }
)

{ after(grammarAccess.getDataTypeAccess().getArrayArrayKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__JsonAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getJsonJSONKeyword_5_0()); }
(
{ before(grammarAccess.getDataTypeAccess().getJsonJSONKeyword_5_0()); }

	'JSON' 

{ after(grammarAccess.getDataTypeAccess().getJsonJSONKeyword_5_0()); }
)

{ after(grammarAccess.getDataTypeAccess().getJsonJSONKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TtypeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getTtypeQualifiedNameParserRuleCall_6_0()); }
	ruleQualifiedName{ after(grammarAccess.getDataTypeAccess().getTtypeQualifiedNameParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MsgStereo__GETAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMsgStereoAccess().getGETGETKeyword_0_0()); }
(
{ before(grammarAccess.getMsgStereoAccess().getGETGETKeyword_0_0()); }

	'GET' 

{ after(grammarAccess.getMsgStereoAccess().getGETGETKeyword_0_0()); }
)

{ after(grammarAccess.getMsgStereoAccess().getGETGETKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MsgStereo__POSTAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMsgStereoAccess().getPOSTPOSTKeyword_1_0()); }
(
{ before(grammarAccess.getMsgStereoAccess().getPOSTPOSTKeyword_1_0()); }

	'POST' 

{ after(grammarAccess.getMsgStereoAccess().getPOSTPOSTKeyword_1_0()); }
)

{ after(grammarAccess.getMsgStereoAccess().getPOSTPOSTKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MsgStereo__CamelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMsgStereoAccess().getCamelCamelKeyword_2_0()); }
(
{ before(grammarAccess.getMsgStereoAccess().getCamelCamelKeyword_2_0()); }

	'Camel' 

{ after(grammarAccess.getMsgStereoAccess().getCamelCamelKeyword_2_0()); }
)

{ after(grammarAccess.getMsgStereoAccess().getCamelCamelKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MsgStereo__JSAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMsgStereoAccess().getJSJSKeyword_3_0()); }
(
{ before(grammarAccess.getMsgStereoAccess().getJSJSKeyword_3_0()); }

	'JS' 

{ after(grammarAccess.getMsgStereoAccess().getJSJSKeyword_3_0()); }
)

{ after(grammarAccess.getMsgStereoAccess().getJSJSKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MsgStereo__JavaAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMsgStereoAccess().getJavaJavaKeyword_4_0()); }
(
{ before(grammarAccess.getMsgStereoAccess().getJavaJavaKeyword_4_0()); }

	'Java' 

{ after(grammarAccess.getMsgStereoAccess().getJavaJavaKeyword_4_0()); }
)

{ after(grammarAccess.getMsgStereoAccess().getJavaJavaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|( options {greedy=false;} : . )*('\\'|'"'))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|( options {greedy=false;} : . )*('\\'|'\''))* '\'');

RULE_COMMENT : ('/*' .* '*/'|'//' ( options {greedy=false;} : . )*('\r'|'\n'));

RULE_WS : (' '|'\r'|'\t'|'\f'|'\n');

RULE_INT : ('0'..'9')+;

RULE_NEWLINE : ('\r'|'\n')+;

RULE_ARROW : ('=>'|'==>');

RULE_FARROW : ('=>'|'==>'|'-'|'->');

RULE_TEXT : .+;


